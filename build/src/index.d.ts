import * as arrayCheckers from './array';
import * as booleanCheckers from './boolean';
import * as nullCheckers from './null';
import * as numberCheckers from './number';
import * as objectCheckers from './object';
import * as stringCheckers from './string';
import { execIfErrorsPresent, flushErrorLog } from './util/error-log';
export declare const prop: {
    isArray: typeof arrayCheckers.propIsArray;
    isArrayOrNull: <K extends import("./util/object-key").ObjectKey>(x: unknown, prop: K) => x is { [key in K]: unknown[] | null; };
    isArrayOrDoesNotExist: <K extends import("./util/object-key").ObjectKey>(x: unknown, prop: K) => x is { [key_1 in K]: unknown[] | undefined; };
    isArrayAndElementsPassCheck: typeof arrayCheckers.propIsArrayAndElementsPassCheck;
    isArrayAndElementsPassCheckOrNull: <K_1 extends import("./util/object-key").ObjectKey, T>(x: unknown, prop: K_1, check: (x: unknown) => T | null) => x is { [key_2 in K_1]: T[] | null; };
    isArrayAndElementsPassCheckOrDoesNotExist: <K_1 extends import("./util/object-key").ObjectKey, T>(x: unknown, prop: K_1, check: (x: unknown) => T | null) => x is { [key_3 in K_1]: T[] | undefined; };
    isArrayOfArrays: typeof arrayCheckers.propIsArrayOfArrays;
    isArrayOfArraysOrNull: <K_2 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_2) => x is { [key_4 in K_2]: unknown[][] | null; };
    isArrayOfArraysOrDoesNotExist: <K_2 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_2) => x is { [key_5 in K_2]: unknown[][] | undefined; };
    isArrayOfBooleans: typeof arrayCheckers.propIsArrayOfBooleans;
    isArrayOfBooleansOrNull: <K_3 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_3) => x is { [key_6 in K_3]: boolean[] | null; };
    isArrayOfBooleansOrDoesNotExist: <K_3 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_3) => x is { [key_7 in K_3]: boolean[] | undefined; };
    isArrayOfNumbers: typeof arrayCheckers.propIsArrayOfNumbers;
    isArrayOfNumbersOrNull: <K_4 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_4) => x is { [key_8 in K_4]: number[] | null; };
    isArrayOfNumbersOrDoesNotExist: <K_4 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_4) => x is { [key_9 in K_4]: number[] | undefined; };
    isArrayOfObjects: typeof arrayCheckers.propIsArrayOfObjects;
    isArrayOfObjectsOrNull: <K_5 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_5) => x is { [key_10 in K_5]: object[] | null; };
    isArrayOfObjectsOrDoesNotExist: <K_5 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_5) => x is { [key_11 in K_5]: object[] | undefined; };
    isArrayOfStrings: typeof arrayCheckers.propIsArrayOfStrings;
    isArrayOfStringsOrNull: <K_6 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_6) => x is { [key_12 in K_6]: string[] | null; };
    isArrayOfStringsOrDoesNotExist: <K_6 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_6) => x is { [key_13 in K_6]: string[] | undefined; };
    isBoolean: typeof booleanCheckers.propIsBoolean;
    isBooleanOrNull: <K_7 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_7) => x is { [key_14 in K_7]: boolean | null; };
    isBooleanOrDoesNotExist: <K_7 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_7) => x is { [key_15 in K_7]: boolean | undefined; };
    isTrue: typeof booleanCheckers.propIsTrue;
    isTrueOrNull: <K_8 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_8) => x is { [key_16 in K_8]: true | null; };
    isTrueOrDoesNotExist: <K_8 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_8) => x is { [key_17 in K_8]: true | undefined; };
    isFalse: typeof booleanCheckers.propIsFalse;
    isFalseOrNull: <K_9 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_9) => x is { [key_18 in K_9]: false | null; };
    isFalseOrDoesNotExist: <K_9 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_9) => x is { [key_19 in K_9]: false | undefined; };
    isNull: typeof nullCheckers.propIsNull;
    isNullOrDoesNotExist: <K_10 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_10) => x is { [key_20 in K_10]: null | undefined; };
    isNumber: typeof numberCheckers.propIsNumber;
    isNumberOrNull: <K_11 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_11) => x is { [key_21 in K_11]: number | null; };
    isNumberOrDoesNotExist: <K_11 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_11) => x is { [key_22 in K_11]: number | undefined; };
    isPositiveNumber: typeof numberCheckers.propIsPositiveNumber;
    isPositiveNumberOrNull: <K_12 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_12) => x is { [key_23 in K_12]: number | null; };
    isPositiveNumberOrDoesNotExist: <K_12 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_12) => x is { [key_24 in K_12]: number | undefined; };
    isOneOfNumbers: typeof numberCheckers.propIsOneOfNumbers;
    isOneOfNumbersOrNull: <K_13 extends import("./util/object-key").ObjectKey, T_1>(x: unknown, prop: K_13, literals: readonly T_1[]) => x is { [key_25 in K_13]: T_1 | null; };
    isOneOfNumbersOrDoesNotExist: <K_13 extends import("./util/object-key").ObjectKey, T_1>(x: unknown, prop: K_13, literals: readonly T_1[]) => x is { [key_26 in K_13]: T_1 | undefined; };
    exists: typeof objectCheckers.exists;
    passesCheck: typeof objectCheckers.propPassesCheck;
    passesCheckOrIsNull: <K_14 extends import("./util/object-key").ObjectKey, T_2>(x: unknown, prop: K_14, check: (x: unknown) => T_2 | null) => x is { [key_27 in K_14]: T_2 | null; };
    passesCheckOrDoesNotExist: <K_14 extends import("./util/object-key").ObjectKey, T_2>(x: unknown, prop: K_14, check: (x: unknown) => T_2 | null) => x is { [key_28 in K_14]: T_2 | undefined; };
    isObject: typeof objectCheckers.propIsObject;
    isObjectOrNull: <K_15 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_15) => x is { [key_29 in K_15]: {} | null; };
    isObjectOrDoesNotExist: <K_15 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_15) => x is { [key_30 in K_15]: {} | undefined; };
    isNonemptyObject: typeof objectCheckers.propIsNonemptyObject;
    isNonemptyObjectOrNull: <K_16 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_16) => x is { [key_31 in K_16]: {} | null; };
    isNonemptyObjectOrDoesNotExist: <K_16 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_16) => x is { [key_32 in K_16]: {} | undefined; };
    isString: typeof stringCheckers.propIsString;
    isStringOrNull: <K_17 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_17) => x is { [key_33 in K_17]: string | null; };
    isStringOrDoesNotExist: <K_17 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_17) => x is { [key_34 in K_17]: string | undefined; };
    isNonemptyString: typeof stringCheckers.propIsNonemptyString;
    isNonemptyStringOrNull: <K_18 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_18) => x is { [key_35 in K_18]: string | null; };
    isNonemptyStringOrDoesNotExist: <K_18 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_18) => x is { [key_36 in K_18]: string | undefined; };
    isOneOfStrings: typeof stringCheckers.propIsOneOfStrings;
    isOneOfStringsOrNull: <K_19 extends import("./util/object-key").ObjectKey, T_3>(x: unknown, prop: K_19, literals: readonly T_3[]) => x is { [key_37 in K_19]: T_3 | null; };
    isOneOfStringsOrDoesNotExist: <K_19 extends import("./util/object-key").ObjectKey, T_3>(x: unknown, prop: K_19, literals: readonly T_3[]) => x is { [key_38 in K_19]: T_3 | undefined; };
};
export declare const log: {
    execIfErrorsPresent: typeof execIfErrorsPresent;
    flush: typeof flushErrorLog;
    isArray: <K extends import("./util/object-key").ObjectKey>(x: unknown, prop: K) => x is { [key in K]: unknown[]; };
    isArrayOrNull: <K extends import("./util/object-key").ObjectKey>(x: unknown, prop: K) => x is { [key_1 in K]: unknown[] | null; };
    isArrayOrDoesNotExist: <K extends import("./util/object-key").ObjectKey>(x: unknown, prop: K) => x is { [key_2 in K]: unknown[] | undefined; };
    isArrayAndElementsPassCheck: <K_1 extends import("./util/object-key").ObjectKey, T>(x: unknown, prop: K_1, check: (x: unknown) => T | null) => x is { [key_3 in K_1]: T[]; };
    isArrayAndElementsPassCheckOrDoesNotExist: <K_1 extends import("./util/object-key").ObjectKey, T>(x: unknown, prop: K_1, check: (x: unknown) => T | null) => x is { [key_4 in K_1]: T[] | undefined; };
    isArrayOfArrays: <K_2 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_2) => x is { [key_5 in K_2]: unknown[][]; };
    isArrayOfArraysOrNull: <K_2 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_2) => x is { [key_6 in K_2]: unknown[][] | null; };
    isArrayOfArraysOrDoesNotExist: <K_2 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_2) => x is { [key_7 in K_2]: unknown[][] | undefined; };
    isArrayOfBooleans: <K_3 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_3) => x is { [key_8 in K_3]: boolean[]; };
    isArrayOfBooleansOrNull: <K_3 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_3) => x is { [key_9 in K_3]: boolean[] | null; };
    isArrayOfBooleansOrDoesNotExist: <K_3 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_3) => x is { [key_10 in K_3]: boolean[] | undefined; };
    isArrayOfNumbers: <K_4 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_4) => x is { [key_11 in K_4]: number[]; };
    isArrayOfNumbersOrNull: <K_4 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_4) => x is { [key_12 in K_4]: number[] | null; };
    isArrayOfNumbersOrDoesNotExist: <K_4 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_4) => x is { [key_13 in K_4]: number[] | undefined; };
    isArrayOfObjects: <K_5 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_5) => x is { [key_14 in K_5]: object[]; };
    isArrayOfObjectsOrNull: <K_5 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_5) => x is { [key_15 in K_5]: object[] | null; };
    isArrayOfObjectsOrDoesNotExist: <K_5 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_5) => x is { [key_16 in K_5]: object[] | undefined; };
    isArrayOfStrings: <K_6 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_6) => x is { [key_17 in K_6]: string[]; };
    isArrayOfStringsOrNull: <K_6 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_6) => x is { [key_18 in K_6]: string[] | null; };
    isArrayOfStringsOrDoesNotExist: <K_6 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_6) => x is { [key_19 in K_6]: string[] | undefined; };
    isBoolean: <K_7 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_7) => x is { [key_20 in K_7]: boolean; };
    isBooleanOrNull: <K_7 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_7) => x is { [key_21 in K_7]: boolean | null; };
    isBooleanOrDoesNotExist: <K_7 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_7) => x is { [key_22 in K_7]: boolean | undefined; };
    isTrue: <K_8 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_8) => x is { [key_23 in K_8]: true; };
    isTrueOrNull: <K_8 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_8) => x is { [key_24 in K_8]: true | null; };
    isTrueOrDoesNotExist: <K_8 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_8) => x is { [key_25 in K_8]: true | undefined; };
    isFalse: <K_9 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_9) => x is { [key_26 in K_9]: false; };
    isFalseOrNull: <K_9 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_9) => x is { [key_27 in K_9]: false | null; };
    isFalseOrDoesNotExist: <K_9 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_9) => x is { [key_28 in K_9]: false | undefined; };
    isNull: <K_10 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_10) => x is { [key_29 in K_10]: null; };
    isNullOrDoesNotExist: <K_10 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_10) => x is { [key_30 in K_10]: null | undefined; };
    isNumber: <K_11 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_11) => x is { [key_31 in K_11]: number; };
    isNumberOrNull: <K_11 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_11) => x is { [key_32 in K_11]: number | null; };
    isNumberOrDoesNotExist: <K_11 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_11) => x is { [key_33 in K_11]: number | undefined; };
    isPositiveNumber: <K_12 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_12) => x is { [key_34 in K_12]: number; };
    isPositiveNumberOrNull: <K_12 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_12) => x is { [key_35 in K_12]: number | null; };
    isPositiveNumberOrDoesNotExist: <K_12 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_12) => x is { [key_36 in K_12]: number | undefined; };
    isOneOfNumbers: <K_13 extends import("./util/object-key").ObjectKey, T_1>(x: unknown, prop: K_13, literals: readonly T_1[]) => x is { [key_37 in K_13]: T_1; };
    isOneOfNumbersOrNull: <K_13 extends import("./util/object-key").ObjectKey, T_1>(x: unknown, prop: K_13, literals: readonly T_1[]) => x is { [key_38 in K_13]: T_1 | null; };
    isOneOfNumbersOrDoesNotExist: <K_13 extends import("./util/object-key").ObjectKey, T_1>(x: unknown, prop: K_13, literals: readonly T_1[]) => x is { [key_39 in K_13]: T_1 | undefined; };
    exists: <K_14 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_14) => x is { [key_40 in K_14]: unknown; };
    passesCheck: <K_15 extends import("./util/object-key").ObjectKey, T_2>(x: unknown, prop: K_15, check: (x: unknown) => T_2 | null) => x is { [key_41 in K_15]: T_2; };
    passesCheckOrIsNull: <K_15 extends import("./util/object-key").ObjectKey, T_2>(x: unknown, prop: K_15, check: (x: unknown) => T_2 | null) => x is { [key_42 in K_15]: T_2 | null; };
    passesCheckOrDoesNotExist: <K_15 extends import("./util/object-key").ObjectKey, T_2>(x: unknown, prop: K_15, check: (x: unknown) => T_2 | null) => x is { [key_43 in K_15]: T_2 | undefined; };
    isObject: <K_16 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_16) => x is { [key_44 in K_16]: {}; };
    isObjectOrNull: <K_16 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_16) => x is { [key_44 in K_16]: {}; };
    isObjectOrDoesNotExist: <K_16 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_16) => x is { [key_45 in K_16]: {} | undefined; };
    isNonemptyObject: <K_17 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_17) => x is { [key_46 in K_17]: {}; };
    isNonemptyObjectOrNull: <K_17 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_17) => x is { [key_46 in K_17]: {}; };
    isNonemptyObjectOrDoesNotExist: <K_17 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_17) => x is { [key_47 in K_17]: {} | undefined; };
    isString: <K_18 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_18) => x is { [key_48 in K_18]: string; };
    isStringOrNull: <K_18 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_18) => x is { [key_49 in K_18]: string | null; };
    isStringOrDoesNotExist: <K_18 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_18) => x is { [key_50 in K_18]: string | undefined; };
    isNonemptyString: <K_19 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_19) => x is { [key_51 in K_19]: string; };
    isNonemptyStringOrNull: <K_19 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_19) => x is { [key_52 in K_19]: string | null; };
    isNonemptyStringOrDoesNotExist: <K_19 extends import("./util/object-key").ObjectKey>(x: unknown, prop: K_19) => x is { [key_53 in K_19]: string | undefined; };
    isOneOfStrings: <K_20 extends import("./util/object-key").ObjectKey, T_3>(x: unknown, prop: K_20, literals: readonly T_3[]) => x is { [key_54 in K_20]: T_3; };
    isOneOfStringsOrNull: <K_20 extends import("./util/object-key").ObjectKey, T_3>(x: unknown, prop: K_20, literals: readonly T_3[]) => x is { [key_55 in K_20]: T_3 | null; };
    isOneOfStringsOrDoesNotExist: <K_20 extends import("./util/object-key").ObjectKey, T_3>(x: unknown, prop: K_20, literals: readonly T_3[]) => x is { [key_56 in K_20]: T_3 | undefined; };
};
//# sourceMappingURL=index.d.ts.map