import * as arrayCheckers from './array';
import * as booleanCheckers from './boolean';
import * as nullCheckers from './null';
import * as numberCheckers from './number';
import * as objectCheckers from './object';
import * as stringCheckers from './string';

import { execIfErrorsPresent, flushErrorLog, withErrorLogs } from './util/error-log';

export const prop = {
  isArray: arrayCheckers.propIsArray,
  isArrayOrNull: arrayCheckers.propIsArrayOrNull,
  isArrayOrDoesNotExist: arrayCheckers.propIsArrayOrDoesNotExist,
  isArrayAndElementsPassCheck: arrayCheckers.propIsArrayAndElementsPassCheck,
  isArrayAndElementsPassCheckOrNull: arrayCheckers.propIsArrayAndElementsPassCheckOrNull,
  isArrayAndElementsPassCheckOrDoesNotExist: arrayCheckers.propIsArrayAndElementsPassCheckOrDoesNotExist,
  isArrayOfArrays: arrayCheckers.propIsArrayOfArrays,
  isArrayOfArraysOrNull: arrayCheckers.propIsArrayOfArraysOrNull,
  isArrayOfArraysOrDoesNotExist: arrayCheckers.propIsArrayOfArraysOrDoesNotExist,
  isArrayOfBooleans: arrayCheckers.propIsArrayOfBooleans,
  isArrayOfBooleansOrNull: arrayCheckers.propIsArrayOfBooleansOrNull,
  isArrayOfBooleansOrDoesNotExist: arrayCheckers.propIsArrayOfBooleansOrDoesNotExist,
  isArrayOfNumbers: arrayCheckers.propIsArrayOfNumbers,
  isArrayOfNumbersOrNull: arrayCheckers.propIsArrayOfNumbersOrNull,
  isArrayOfNumbersOrDoesNotExist: arrayCheckers.propIsArrayOfNumbersOrDoesNotExist,
  isArrayOfObjects: arrayCheckers.propIsArrayOfObjects,
  isArrayOfObjectsOrNull: arrayCheckers.propIsArrayOfObjectsOrNull,
  isArrayOfObjectsOrDoesNotExist: arrayCheckers.propIsArrayOfObjectsOrDoesNotExist,
  isArrayOfStrings: arrayCheckers.propIsArrayOfStrings,
  isArrayOfStringsOrNull: arrayCheckers.propIsArrayOfStringsOrNull,
  isArrayOfStringsOrDoesNotExist: arrayCheckers.propIsArrayOfStringsOrDoesNotExist,

  isBoolean: booleanCheckers.propIsBoolean,
  isBooleanOrNull: booleanCheckers.propIsBooleanOrNull,
  isBooleanOrDoesNotExist: booleanCheckers.propIsBooleanOrDoesNotExist,
  isTrue: booleanCheckers.propIsTrue,
  isTrueOrNull: booleanCheckers.propIsTrueOrNull,
  isTrueOrDoesNotExist: booleanCheckers.propIsTrueOrDoesNotExist,
  isFalse: booleanCheckers.propIsFalse,
  isFalseOrNull: booleanCheckers.propIsFalseOrNull,
  isFalseOrDoesNotExist: booleanCheckers.propIsFalseOrDoesNotExist,

  isNull: nullCheckers.propIsNull,
  isNullOrDoesNotExist: nullCheckers.propIsNullOrDoesNotExist,

  isNumber: numberCheckers.propIsNumber,
  isNumberOrNull: numberCheckers.propIsNumberOrNull,
  isNumberOrDoesNotExist: numberCheckers.propIsNumberOrDoesNotExist,
  isPositiveNumber: numberCheckers.propIsPositiveNumber,
  isPositiveNumberOrNull: numberCheckers.propIsPositiveNumberOrNull,
  isPositiveNumberOrDoesNotExist: numberCheckers.propIsPositiveNumberOrDoesNotExist,
  isOneOfNumbers: numberCheckers.propIsOneOfNumbers,
  isOneOfNumbersOrNull: numberCheckers.propIsOneOfNumbersOrNull,
  isOneOfNumbersOrDoesNotExist: numberCheckers.propIsOneOfNumbersOrDoesNotExist,

  exists: objectCheckers.exists,
  passesCheck: objectCheckers.propPassesCheck,
  passesCheckOrIsNull: objectCheckers.propPassesCheckOrIsNull,
  passesCheckOrDoesNotExist: objectCheckers.propPassesCheckOrDoesNotExist,
  isObject: objectCheckers.propIsObject,
  isObjectOrNull: objectCheckers.propIsObjectOrNull,
  isObjectOrDoesNotExist: objectCheckers.propIsObjectOrDoesNotExist,
  isNonemptyObject: objectCheckers.propIsNonemptyObject,
  isNonemptyObjectOrNull: objectCheckers.propIsNonemptyObjectOrNull,
  isNonemptyObjectOrDoesNotExist: objectCheckers.propIsNonemptyObjectOrDoesNotExist,

  isString: stringCheckers.propIsString,
  isStringOrNull: stringCheckers.propIsStringOrNull,
  isStringOrDoesNotExist: stringCheckers.propIsStringOrDoesNotExist,
  isNonemptyString: stringCheckers.propIsNonemptyString,
  isNonemptyStringOrNull: stringCheckers.propIsNonemptyStringOrNull,
  isNonemptyStringOrDoesNotExist: stringCheckers.propIsNonemptyStringOrDoesNotExist,
  isOneOfStrings: stringCheckers.propIsOneOfStrings,
  isOneOfStringsOrNull: stringCheckers.propIsOneOfStringsOrNull,
  isOneOfStringsOrDoesNotExist: stringCheckers.propIsOneOfStringsOrDoesNotExist,
}

// Can't come up with any way to map all props without TS losing track of types
export const log = {
  execIfErrorsPresent,
  flush: flushErrorLog,

  isArray: withErrorLogs(arrayCheckers.propIsArray),
  isArrayOrNull: withErrorLogs(arrayCheckers.propIsArrayOrNull),
  isArrayOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayOrDoesNotExist),
  isArrayAndElementsPassCheck: withErrorLogs(arrayCheckers.propIsArrayAndElementsPassCheck),
  isArrayAndElementsPassCheckOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayAndElementsPassCheckOrDoesNotExist),
  isArrayOfArrays: withErrorLogs(arrayCheckers.propIsArrayOfArrays),
  isArrayOfArraysOrNull: withErrorLogs(arrayCheckers.propIsArrayOfArraysOrNull),
  isArrayOfArraysOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayOfArraysOrDoesNotExist),
  isArrayOfBooleans: withErrorLogs(arrayCheckers.propIsArrayOfBooleans),
  isArrayOfBooleansOrNull: withErrorLogs(arrayCheckers.propIsArrayOfBooleansOrNull),
  isArrayOfBooleansOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayOfBooleansOrDoesNotExist),
  isArrayOfNumbers: withErrorLogs(arrayCheckers.propIsArrayOfNumbers),
  isArrayOfNumbersOrNull: withErrorLogs(arrayCheckers.propIsArrayOfNumbersOrNull),
  isArrayOfNumbersOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayOfNumbersOrDoesNotExist),
  isArrayOfObjects: withErrorLogs(arrayCheckers.propIsArrayOfObjects),
  isArrayOfObjectsOrNull: withErrorLogs(arrayCheckers.propIsArrayOfObjectsOrNull),
  isArrayOfObjectsOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayOfObjectsOrDoesNotExist),
  isArrayOfStrings: withErrorLogs(arrayCheckers.propIsArrayOfStrings),
  isArrayOfStringsOrNull: withErrorLogs(arrayCheckers.propIsArrayOfStringsOrNull),
  isArrayOfStringsOrDoesNotExist: withErrorLogs(arrayCheckers.propIsArrayOfStringsOrDoesNotExist),

  isBoolean: withErrorLogs(booleanCheckers.propIsBoolean),
  isBooleanOrNull: withErrorLogs(booleanCheckers.propIsBooleanOrNull),
  isBooleanOrDoesNotExist: withErrorLogs(booleanCheckers.propIsBooleanOrDoesNotExist),
  isTrue: withErrorLogs(booleanCheckers.propIsTrue),
  isTrueOrNull: withErrorLogs(booleanCheckers.propIsTrueOrNull),
  isTrueOrDoesNotExist: withErrorLogs(booleanCheckers.propIsTrueOrDoesNotExist),
  isFalse: withErrorLogs(booleanCheckers.propIsFalse),
  isFalseOrNull: withErrorLogs(booleanCheckers.propIsFalseOrNull),
  isFalseOrDoesNotExist: withErrorLogs(booleanCheckers.propIsFalseOrDoesNotExist),

  isNull: withErrorLogs(nullCheckers.propIsNull),
  isNullOrDoesNotExist: withErrorLogs(nullCheckers.propIsNullOrDoesNotExist),

  isNumber: withErrorLogs(numberCheckers.propIsNumber),
  isNumberOrNull: withErrorLogs(numberCheckers.propIsNumberOrNull),
  isNumberOrDoesNotExist: withErrorLogs(numberCheckers.propIsNumberOrDoesNotExist),
  isPositiveNumber: withErrorLogs(numberCheckers.propIsPositiveNumber),
  isPositiveNumberOrNull: withErrorLogs(numberCheckers.propIsPositiveNumberOrNull),
  isPositiveNumberOrDoesNotExist: withErrorLogs(numberCheckers.propIsPositiveNumberOrDoesNotExist),
  isOneOfNumbers: withErrorLogs(numberCheckers.propIsOneOfNumbers),
  isOneOfNumbersOrNull: withErrorLogs(numberCheckers.propIsOneOfNumbersOrNull),
  isOneOfNumbersOrDoesNotExist: withErrorLogs(numberCheckers.propIsOneOfNumbersOrDoesNotExist),

  exists: withErrorLogs(objectCheckers.exists),
  passesCheck: withErrorLogs(objectCheckers.propPassesCheck),
  passesCheckOrIsNull: withErrorLogs(objectCheckers.propPassesCheckOrIsNull),
  passesCheckOrDoesNotExist: withErrorLogs(objectCheckers.propPassesCheckOrDoesNotExist),
  isObject: withErrorLogs(objectCheckers.propIsObject),
  isObjectOrNull: withErrorLogs(objectCheckers.propIsObject),
  isObjectOrDoesNotExist: withErrorLogs(objectCheckers.propIsObjectOrDoesNotExist),
  isNonemptyObject: withErrorLogs(objectCheckers.propIsNonemptyObject),
  isNonemptyObjectOrNull: withErrorLogs(objectCheckers.propIsNonemptyObject),
  isNonemptyObjectOrDoesNotExist: withErrorLogs(objectCheckers.propIsNonemptyObjectOrDoesNotExist),

  isString: withErrorLogs(stringCheckers.propIsString),
  isStringOrNull: withErrorLogs(stringCheckers.propIsStringOrNull),
  isStringOrDoesNotExist: withErrorLogs(stringCheckers.propIsStringOrDoesNotExist),
  isNonemptyString: withErrorLogs(stringCheckers.propIsNonemptyString),
  isNonemptyStringOrNull: withErrorLogs(stringCheckers.propIsNonemptyStringOrNull),
  isNonemptyStringOrDoesNotExist: withErrorLogs(stringCheckers.propIsNonemptyStringOrDoesNotExist),
  isOneOfStrings: withErrorLogs(stringCheckers.propIsOneOfStrings),
  isOneOfStringsOrNull: withErrorLogs(stringCheckers.propIsOneOfStringsOrNull),
  isOneOfStringsOrDoesNotExist: withErrorLogs(stringCheckers.propIsOneOfStringsOrDoesNotExist),
};